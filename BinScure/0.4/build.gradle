buildscript {
    ext.kotlin_version = '1.4.0'
    repositories {
        mavenCentral()
        jcenter()
        google()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.guardsquare:proguard-gradle:7.0.0'
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.0.0'
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'

group 'cookiedragon'
version ''

jar {
    manifest {
        attributes (
                "Main-Class": "dev.binclub.binscure.api.Binscure"
        )
    }
    archiveName = "binscure.jar"
}

shadowJar() {
    classifier = "shadow"
    archiveName = "binscure-shadow.jar"
    manifest {
        attributes 'Main-Class': "dev.binclub.binscure.api.Binscure"
    }
    new File("build/libs/binscure-release.jar").delete()
}

task apiJar(type: Jar, dependsOn: shadowJar) {
    from (zipTree(shadowJar.archivePath)) {
        include "dev/binclub/binscure/api/**"
    }
    classifier = "api"
    archiveName = "binscure-api.jar"
}

task proguard(type: proguard.gradle.ProGuardTask, dependsOn: shadowJar) {
    configuration 'proguard/proguard.txt'

    injars 'build/libs/binscure-shadow.jar'
    outjars 'build/libs/binscure-release.jar'
}

//build.dependsOn.add("apiJar")
build.finalizedBy (apiJar)

sourceSets {
    main {
        java {
            srcDirs = ['src/main/kotlin']
        }
        resources {
            srcDirs = ['src/resources']
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile 'org.ow2.asm:asm:7.1'
    compile 'org.ow2.asm:asm-tree:7.1'
    compile 'org.ow2.asm:asm-commons:7.1'
    compile 'org.ow2.asm:asm-util:7.1'

    compile 'com.sksamuel.hoplite:hoplite-core:1.1.4'
    compile 'com.sksamuel.hoplite:hoplite-yaml:1.1.4'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.noJdk = false
    kotlinOptions.noReflect = true
    kotlinOptions.noStdlib = true
}
