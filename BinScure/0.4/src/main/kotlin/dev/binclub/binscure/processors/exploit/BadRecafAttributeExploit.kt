package dev.binclub.binscure.processors.exploit

import dev.binclub.binscure.IClassProcessor
import dev.binclub.binscure.api.TransformerConfiguration
import dev.binclub.binscure.configuration.ConfigurationManager.rootConfig
import dev.binclub.binscure.forClass
import dev.binclub.binscure.forMethod
import org.objectweb.asm.tree.AnnotationNode
import org.objectweb.asm.tree.ClassNode

/**
 * @author cook 11/Dec/2020
 */
object BadRecafAttributeExploit: IClassProcessor {
	override val progressDescription: String = "Inserting Recaf Crashers"
	override val config = rootConfig.crasher
	
	private const val COMMENT_ANNOTATION_TYPE = "Lme/coley/recaf/InsnComment;"
	private const val COMMENT_KEY_PREFIX = "At_"
	private const val COMMENT_KEY = COMMENT_KEY_PREFIX + "5"
	
	override fun process(classes: MutableCollection<ClassNode>, passThrough: MutableMap<String, ByteArray>) {
		if (!config.enabled || !config.recaf)
			return
		
		val annotation = AnnotationNode(COMMENT_ANNOTATION_TYPE)
		annotation.values = arrayListOf<Any>(COMMENT_KEY, 5)
		forClass(classes) { cn ->
			forMethod(cn) { mn ->
				mn.visibleAnnotations = (mn.visibleAnnotations ?: arrayListOf()).also { annotations ->
					annotations.add(annotation)
				}
			}
		}
	}
}
